node {
    
    try{
        
        stage('CI')    
        
        //git 'https://github.com/motyim/Jenkins-demo.git'
        checkout scm
		
        bat 'mvn clean package'
    
        // stash code & dependencies to be run laters
        // and ensure same code & dependencies are used throughout the pipeline
        // stash is a temporary archive
        stash name: 'everything', 
              includes: 'target/**'
        
        //generate report
        step([$class: 'JUnitResultArchiver', testResults: 'target/surefire-reports/TEST*.xml'])
        
        archiveArtifacts 'target/*.jar'
    
        notify("Success")
        
    }catch(err){
        notify("Error")
    }

}

node('windows'){
    
    bat 'dir'
    
    unstash 'everything'

    bat 'dir'
}


input 'Deploy to staging?'

// limit concurrency so we don't perform simultaneous deploys
// and if multiple pipelines are executing, 
// newest is only that will be allowed through, rest will be canceled
stage name: 'Deploy to staging', concurrency: 1

node('windows'){
    bat 'java -jar target/JenkinsDemo-1.0-SNAPSHOT.jar'
}

def notify(status){
    
    emailext (
        body: """<p>${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
        <p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",
        subject: "${status}: Job ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
        to: 'mohamed.motyim@gmail.com'
        )
}